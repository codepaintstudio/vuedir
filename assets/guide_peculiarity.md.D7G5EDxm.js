import{_ as i,c as a,o as t,ae as e}from"./chunks/framework.D3orruFJ.js";const E=JSON.parse('{"title":"特性预览","description":"","frontmatter":{},"headers":[],"relativePath":"guide/peculiarity.md","filePath":"guide/peculiarity.md","lastUpdated":1739951427000}'),l={name:"guide/peculiarity.md"};function p(h,s,n,k,d,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="特性预览" tabindex="-1">特性预览 <a class="header-anchor" href="#特性预览" aria-label="Permalink to &quot;特性预览&quot;">​</a></h1><h2 id="链式传参" tabindex="-1">链式传参 <a class="header-anchor" href="#链式传参" aria-label="Permalink to &quot;链式传参&quot;">​</a></h2><p>有些时候我们在使用指令时需要传入多个参数，最简单的方式是使用对象格式，例如：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-hihtlight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">={</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bgColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;red&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    textColor:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;white&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}&gt;这是一段文本&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>但是这样写起来比较麻烦，我们可以使用链式传参的方式来简化代码，例如：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-hihtlight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bgColor-red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">textColor-white</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;这是一段文本&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>这种通过<code>.</code>来分割属性，通过<code>-</code>来赋值的方式在<code>VueDir</code>中叫链式传参，这种方式可以让我们更加方便地使用指令。</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>并不是所有的指令都支持链式传参，请你在使用链式传参是务必查看指令文档。</p></div><hr>`,9)]))}const c=i(l,[["render",p]]);export{E as __pageData,c as default};
