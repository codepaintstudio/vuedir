name: Documentation Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'docs/**'
      - 'README.md'
      - 'README.zh.md'

permissions:
  pull-requests: write
  contents: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      # 添加 jsdom 依赖用于浏览器环境mock
      - name: Install jsdom
        run: pnpm add -D jsdom

      # 创建浏览器环境mock文件
      - name: Create browser environment mock
        run: |
          cat > browser-env-mock.js << 'EOL'
          # 这里粘贴与您原始工作流相同的浏览器模拟环境代码
          EOL

      - name: Build core library
        run: pnpm build:core

      # 使用环境mock构建文档
      - name: Build docs with browser environment
        run: NODE_OPTIONS='--require=./browser-env-mock.js' pnpm --filter docs build

      # 部署到 PR 特定的分支
      - name: Deploy preview
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs/.vitepress/dist
          branch: gh-pages
          target-folder: pr-${{ github.event.pull_request.number }}
          clean: true

      # 在 PR 中添加评论，包含预览链接
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = context.issue.number;
            const repoName = context.repo.repo;
            const owner = context.repo.owner;
            
            const previewUrl = `https://${owner}.github.io/${repoName}/pr-${prNumber}/`;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: owner,
              repo: repoName,
              body: `📝 文档预览已部署到: [${previewUrl}](${previewUrl})`
            });
